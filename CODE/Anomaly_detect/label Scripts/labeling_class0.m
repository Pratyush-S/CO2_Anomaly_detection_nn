
clc;
clear all;
%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: D:\PS!\CO2_Anomaly_detection\CODE\Anomaly_detect\dataset\p\Simulink_Data2.xlsx
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2019/07/17 11:26:35

%% Import the data
[~, ~, raw0_0] = xlsread('D:\PS!\CO2_Anomaly_detection\CODE\Anomaly_detect\dataset\p\Simulink_Data2.xlsx','Sheet1','I1:K6');
[~, ~, raw0_1] = xlsread('D:\PS!\CO2_Anomaly_detection\CODE\Anomaly_detect\dataset\p\Simulink_Data2.xlsx','Sheet1','M1:M6');
raw = [raw0_0,raw0_1];
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
t_sim = data(:,1);
p_sim = data(:,2);
h_sim = data(:,3);
pas_cnt = data(:,4);

%% Clear temporary variables
clearvars data raw raw0_0 raw0_1 R;



%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: D:\PS!\CO2_Anomaly_detection\CODE\Anomaly_detect\dataset\p\Simulink_Data.xlsx
%    Worksheet: Sheet2
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2019/07/17 11:27:57

%% Import the data
[~, ~, raw] = xlsread('D:\PS!\CO2_Anomaly_detection\CODE\Anomaly_detect\dataset\p\Simulink_Data.xlsx','Sheet2','A2:I14402');
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
stringVectors = string(raw(:,[8,9]));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[1,2,3,4,5,6,7]);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
Time = data(:,1);
CO2_Zone_1 = data(:,2);
CO2_Zone_2 = data(:,3);
CO2_Zone_3 = data(:,4);
CO2_Zone_4 = data(:,5);
CO2_Zone_5 = data(:,6);
CO2_Zone_6 = data(:,7);
flightNo = categorical(stringVectors(:,1));
tailNo = categorical(stringVectors(:,2));

%% Clear temporary variables
clearvars data raw stringVectors R;





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
a=ones(14401,1);
temp=a*t_sim(2);
press=a*p_sim(2);
humid=a*h_sim(3);
humid(1)=h_sim(2);
passcnt=a*pas_cnt(2);
x=zeros(14402,1);

final_array=cat(2,Time,CO2_Zone_1,CO2_Zone_2,CO2_Zone_3,CO2_Zone_4,CO2_Zone_5,CO2_Zone_6,temp,press,humid,passcnt,x,x,x,x);

final_table=array2table(final_array,'VariableNames',{'Time','CO2_Zone_1','CO2_Zone_2','CO2_Zone_3','CO2_Zone_4','CO2_Zone_5','CO2_Zone_6','temp','press','humid','pass','class_0','class_1','class_2','class_3'});
file_name=strcat('dataset_4hr_pascnt_',num2str(passcnt(4)),'.xlsx');
writetable(final_table,file_name);
