clc;
clear all;

%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: D:\PS!\CO2_Anomaly_detection\CODE\Anomaly_detect\dataset\class1\p\Simulink_Data2.xlsx
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2019/07/18 10:24:16

%% Import the data
[~, ~, raw] = xlsread('D:\PS!\CO2_Anomaly_detection\CODE\Anomaly_detect\dataset\class1\p\Simulink_Data2.xlsx','Sheet1','A2:M241');
stringVectors = string(raw(:,[8,12]));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[1,2,3,4,5,6,7,9,10,11,13]);

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
Time2 = data(:,1);
CO2min_Zone_1 = data(:,2);
CO2min_Zone_2 = data(:,3);
CO2min_Zone_3 = data(:,4);
CO2min_Zone_4 = data(:,5);
CO2min_Zone_5 = data(:,6);
CO2min_Zone_6 = data(:,7);
flightNo2 = categorical(stringVectors(:,1));
t_sim = data(:,8);
p_sim = data(:,9);
h_sim = data(:,10);
tailNo2 = categorical(stringVectors(:,2));
pas_cnt = data(:,11);

%% Clear temporary variables
clearvars data raw stringVectors;

%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: D:\PS!\CO2_Anomaly_detection\CODE\Anomaly_detect\dataset\class1\p\Simulink_Data.xlsx
%    Worksheet: Sheet2
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2019/07/18 10:24:43

%% Import the data
[~, ~, raw] = xlsread('D:\PS!\CO2_Anomaly_detection\CODE\Anomaly_detect\dataset\class1\p\Simulink_Data.xlsx','Sheet2','A2:I14402');
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
stringVectors = string(raw(:,[8,9]));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[1,2,3,4,5,6,7]);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
Time = data(:,1);
CO2_Zone_1 = data(:,2);
CO2_Zone_2 = data(:,3);
CO2_Zone_3 = data(:,4);
CO2_Zone_4 = data(:,5);
CO2_Zone_5 = data(:,6);
CO2_Zone_6 = data(:,7);
flightNo = categorical(stringVectors(:,1));
tailNo = categorical(stringVectors(:,2));

%% Clear temporary variables
clearvars data raw stringVectors R;




CO2_Zone_1(1)=[];
CO2_Zone_2(1)=[];
CO2_Zone_3(1)=[];
CO2_Zone_4(1)=[];
CO2_Zone_5(1)=[];
CO2_Zone_6(1)=[];
tailNo(1)=[];
flightNo(1)=[];

k=0;
for i = 1:240
    for j = 1:60
        k=k+1;
        temp(k)=t_sim(i);
        press(k)=p_sim(i);
        humid(k)=h_sim(i);
        pass(k)=pas_cnt(i);
        
    end
end
humid_f= humid.';
temp_f=temp.';
press_f=press.';
pass_f=pass.';

final_array=cat(2,CO2_Zone_1,CO2_Zone_2,CO2_Zone_3,CO2_Zone_4,CO2_Zone_5,CO2_Zone_6,temp_f,press_f,humid_f,pass_f);

final_table=array2table(final_array,'VariableNames',{'CO2_Zone_1','CO2_Zone_2','CO2_Zone_3','CO2_Zone_4','CO2_Zone_5','CO2_Zone_6','temp_f','press_f','humid_f','pass_f'});

file_name=strcat('dataset_4hr_pascnt_',num2str(pass_f(4)),'.xlsx');
writetable(final_table,file_name);



